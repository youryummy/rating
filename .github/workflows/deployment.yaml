name: Node.js CI

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**/*.md'
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '**/*.md'

jobs:  
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Install dependencies
        run: npm ci
      - name: Run mongo docker
        run: docker run -d -p 27017:27017 --name mongo mongo:latest
      - name: Create env file
        run: echo "${{ secrets.RATING_TOKEN }}" > .env.test
      - name: Run tests
        run: npm test
        env:
          CI: true

  githubRelease:
    name: Release new version to GitHub
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push'}}
    needs: [test]
    steps:
      - uses: actions/checkout@v2
      - name: Conventional Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.RATING_TOKEN }}
          output-file: 'CHANGELOG.md'
          tag-prefix: 'v'
          release-count: 0
          fallback-version: '1.0.0'
          skip-on-empty: 'false'
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RATING_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
      - name: Sync develop with main
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "main"
          destination_branch: "develop"
          pr_title: "Synchronize develop with master after release ${{ steps.changelog.outputs.tag }}"
          pr_body: ":crown:"
          pr_assignee: "aniitadiazm"
          pr_label: "auto-pr"                              
          github_token: ${{ secrets.RATING_TOKEN }}

  oktetoRelease:
      name: Deploy to Okteto
      needs: githubRelease
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Okteto Login
          uses: okteto/login@latest
          with:
            token: ${{ secrets.RATING_TOKEN }}
        - name: Okteto Deploy
          uses: okteto/pipeline@latest
          with:
            name: ratings-service
            namespace: youryummy-maribelrb22
            variables: >-
              NODE_ENV=production,
              NAMESPACE=youryummy-maribelrb22,
              MONGO_PROTO=mongodb+srv,
              MONGO_HOST=ratings-service.olmvwaw.mongodb.net,
              MONGO_USER=rservice,
              MONGO_DBNAME=ratings,
              COOKIE_DOMAIN=cloud.okteto.net,
